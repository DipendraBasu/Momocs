% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gr-cheapbabi-paper_and_draw.R
\name{paper_white}
\alias{paper_white}
\alias{paper_grid}
\alias{cheapbabi_drawers}
\alias{draw_outline}
\alias{draw_landmarks}
\alias{draw_curve}
\alias{draw_centroid}
\alias{draw_firstpoint}
\alias{draw_axes}
\alias{draw_labels}
\alias{draw_links}
\title{# todo
#paper_chessboard}
\usage{
paper_white(coo)

paper_grid(coo, grid = c(10, 5), cols = c("#ffa500", "#e5e5e5"), ...)

draw_outline(coo, border = par("fg"), col = NA, ...)

draw_landmarks(coo, col = par("fg"), pch = 20, ...)

draw_curve(coo, col = par("fg"), ...)

draw_centroid(coo, pch = 3, cex = 0.5, ...)

draw_firstpoint(coo, cex = 1, ...)

draw_axes(coo, col = "#999999", lwd = 1/2, ...)

draw_labels(coo, labels = 1:nrow(coo), d = 1/20, cex = 1/2, ...)

draw_links(coo, links, lwd = 1/2, col = par("fg"), ...)
}
\arguments{
\item{coo}{\code{matrix} of 2 columns for (x, y) coordinates}

\item{grid}{\code{numeric} of length 2 to (roughly) specify the
number of majors lines, and the number of minor lines within two major ones}

\item{...}{additional options to feed core functions for each drawer}

\item{border}{color (hexadecimal) to draw components}

\item{col}{color (hexadecimal) to draw components}

\item{pch}{to draw components}

\item{cex}{to draw components}

\item{labels}{\code(character) name of labels to draw (defaut to \code{1:nrow(coo)})}

\item{d}{\code{numeric} how far away on a segment should the labels be displayed
(on a centroid-point) segment.}

\item{links}{\code{matrix} of links}
}
\description{
#' @export
.chessboard <- function(n=50, col="grey98", w){
  # grabs window parameters if not provided
  if (missing(w)) w <- par("usr")
  # max dimension
  wm <-   max(w[2] - w[1], w[4] - w[3])
  side <- wm/n
  # generates xleft coordinates (1/2 is picked)
  xl <- seq(w[1], w[2], side)[seq(0, n, 2)+1]
  # generates all ybottom coordinates
  yb <- seq(w[3], w[4], side)
  # handles g(ap) through modulus
  g <- c(0, side)[(1:n %% 2)+1]
  # loop and draw rectangles
  for (j in 1:n)
    rect(xl + g[j], yb[j], xl + g[j] + side, yb[j]+side, col=col, border=NA)
}

Useful drawers for building custom
shape plots using the cheapbabi approach. See examples.
}
\note{
This appriach will replace \link{coo_plot} and friends in further versions.
All comments are welcome.
}
\examples{
bot[1] \%>\% paper_grid() \%>\% draw_polygon() \%>\% draw_centroid() \%>\% draw_axes()
hearts[240] \%>\% paper_white() \%>\% draw_polygon() \%>\%
  draw_firstpoint(cex=1)

hearts[240] \%>\% paper_white() \%>\% draw_outline() \%>\%
  coo_sample(24) \%>\% draw_landmarks \%>\% draw_labels() \%>\%
  draw_links(replicate(2, sample(1:24, 8)))
}
\seealso{
cheapbabi_layers

Other graphics cheapbabi: \code{\link{cheapbabi_layers}}
}
